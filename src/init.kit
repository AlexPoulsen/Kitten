include "limits.h";
include "unistd.h";
include "sys/types.h";
include "sys/stat.h";
include "errno.h";
import stringbuilder;
import kit.sys.dir;

function populateJSONDir(root: StringBuilder) {
    root.appendString("/kitten/_kitten_json_dir");
    chdir(root.toString());
    system("rm -rf Kitten-packages");
    system("git clone https://github.com/AlexPoulsen/Kitten-packages.git");
    var errno: Int;
    var rootCache: CString = root.toString();
    printf("%s\n", root.returnWithString("/Kitten-packages"));
    var dir: DirectoryReader = DirectoryReader.new(root.returnWithString("/Kitten-packages"));
    if errno != 0{
        perror("Directory read failed");
    }
    for d in dir {
        if (strcmp(d.d_name, ".") != 0) && (strcmp(d.d_name, "..") != 0) {
            var cmdSB1 = StringBuilder.newFromString("mv ").appendString(rootCache).appendString("/Kitten-packages/").appendString(d.d_name);
            var cmdSB2 = StringBuilder.newFromString(cmdSB1.toString()).appendString(" ").appendString(rootCache);
            // printf("%s  |  %s\n", d.d_name, cmdSB2.toString());
            system(cmdSB2.toString());
        }
    }
    rmdir(root.returnWithString("/Kitten-packages/"));
}


function createDirs(root: StringBuilder) {
    root.appendString("/kitten");
    var errno;
    var mkdirSuccess = mkdir(root.toString(), 0o777);
    if mkdirSuccess != 0 {
        perror(StringBuilder.newFromString("Creation of `").appendFromCopy(root).appendString("` failed").toString());
    }
    errno = 0;
    mkdirSuccess = mkdir(root.returnWithString("/_kitten_json_dir"), 0o777);
    if mkdirSuccess != 0 {
        perror(StringBuilder.newFromString("Creation of `").appendString(root.returnWithString("/_kitten_json_dir")).appendString("` failed").toString());
    }
    errno = 0;
    mkdirSuccess = mkdir(root.returnWithString("/_kitten_packages"), 0o777);
    if mkdirSuccess != 0 {
        perror(StringBuilder.newFromString("Creation of `").appendString(root.returnWithString("/_kitten_packages")).appendString("` failed").toString());
    }
    errno = 0;
}


function main() {
    var root: StringBuilder = StringBuilder.newFromString("/usr/local/lib/kit");
    createDirs(root.makeCopy());
    populateJSONDir(root.makeCopy());
}
